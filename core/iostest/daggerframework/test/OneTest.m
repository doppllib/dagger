//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "CoTouchlabDopplTestingDopplJunitTestHelper.h"
#include "DaggerInternalDoubleCheckTest.h"
#include "DaggerInternalInstanceFactoryTest.h"
#include "DaggerInternalMapProviderFactoryTest.h"
#include "DaggerInternalSetFactoryTest.h"
#include "DaggerInternalSingleCheckTest.h"
#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "OneTest.h"
#include "java/util/ArrayList.h"
#include "java/util/Arrays.h"
#include "java/util/List.h"

inline IOSObjectArray *OneTest_get_alltests();
inline IOSObjectArray *OneTest_set_alltests(IOSObjectArray *value);
static IOSObjectArray *OneTest_alltests;
J2OBJC_STATIC_FIELD_OBJ(OneTest, alltests, IOSObjectArray *)

J2OBJC_INITIALIZED_DEFN(OneTest)

@implementation OneTest

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OneTest_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (jint)runTests {
  return OneTest_runTests();
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x9, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(runTests);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "alltests", "[LIOSClass;", .constantValue.asLong = 0, 0xa, -1, 0, -1, -1 },
  };
  static const void *ptrTable[] = { &OneTest_alltests };
  static const J2ObjcClassInfo _OneTest = { "OneTest", NULL, ptrTable, methods, fields, 7, 0x1, 2, 1, -1, -1, -1, -1, -1 };
  return &_OneTest;
}

+ (void)initialize {
  if (self == [OneTest class]) {
    JreStrongAssignAndConsume(&OneTest_alltests, [IOSObjectArray newArrayWithObjects:(id[]){ DaggerInternalDoubleCheckTest_class_(), DaggerInternalInstanceFactoryTest_class_(), DaggerInternalMapProviderFactoryTest_class_(), DaggerInternalSetFactoryTest_class_(), DaggerInternalSingleCheckTest_class_() } count:5 type:IOSClass_class_()]);
    J2OBJC_SET_INITIALIZED(OneTest)
  }
}

@end

void OneTest_init(OneTest *self) {
  NSObject_init(self);
}

OneTest *new_OneTest_init() {
  J2OBJC_NEW_IMPL(OneTest, init)
}

OneTest *create_OneTest_init() {
  J2OBJC_CREATE_IMPL(OneTest, init)
}

jint OneTest_runTests() {
  OneTest_initialize();
  id<JavaUtilList> smoothClasses = create_JavaUtilArrayList_initWithJavaUtilCollection_(JavaUtilArrays_asListWithNSObjectArray_(OneTest_alltests));
  IOSObjectArray *classes = [smoothClasses toArrayWithNSObjectArray:[IOSObjectArray arrayWithLength:[smoothClasses size] type:IOSClass_class_()]];
  return CoTouchlabDopplTestingDopplJunitTestHelper_runWithIOSClassArray_(classes);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OneTest)
