//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel-doppl/dagger/core/src/main/java/dagger/Component.java
//

#include "DaggerComponent.h"
#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/annotation/Annotation.h"
#include "java/lang/annotation/Documented.h"
#include "java/lang/annotation/ElementType.h"
#include "java/lang/annotation/Retention.h"
#include "java/lang/annotation/RetentionPolicy.h"
#include "java/lang/annotation/Target.h"

__attribute__((unused)) static IOSObjectArray *DaggerComponent__Annotations$0();

__attribute__((unused)) static IOSObjectArray *DaggerComponent_Builder__Annotations$0();

@implementation DaggerComponent

@synthesize modules = modules_;
@synthesize dependencies = dependencies_;

+ (IOSObjectArray *)modulesDefault {
  return [IOSObjectArray arrayWithObjects:(id[]){  } count:0 type:IOSClass_class_()];
}

+ (IOSObjectArray *)dependenciesDefault {
  return [IOSObjectArray arrayWithObjects:(id[]){  } count:0 type:IOSClass_class_()];
}

- (IOSClass *)annotationType {
  return DaggerComponent_class_();
}

- (NSString *)description {
  return @"@dagger.Component()";
}

- (void)dealloc {
  RELEASE_(modules_);
  RELEASE_(dependencies_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "[LIOSClass;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "[LIOSClass;", 0x401, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(modules);
  methods[1].selector = @selector(dependencies);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LDaggerComponent_Builder;", (void *)&DaggerComponent__Annotations$0 };
  static const J2ObjcClassInfo _DaggerComponent = { "Component", "dagger", ptrTable, methods, NULL, 7, 0x2609, 2, 0, -1, 0, -1, -1, 1 };
  return &_DaggerComponent;
}

@end

id<DaggerComponent> create_DaggerComponent(IOSObjectArray *dependencies, IOSObjectArray *modules) {
  DaggerComponent *self = AUTORELEASE([[DaggerComponent alloc] init]);
  self->dependencies_ = RETAIN_(dependencies);
  self->modules_ = RETAIN_(modules);
  return self;
}

IOSObjectArray *DaggerComponent__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangAnnotationRetention(JreLoadEnum(JavaLangAnnotationRetentionPolicy, RUNTIME)), create_JavaLangAnnotationTarget([IOSObjectArray arrayWithObjects:(id[]){ JreLoadEnum(JavaLangAnnotationElementType, TYPE) } count:1 type:NSObject_class_()]), create_JavaLangAnnotationDocumented() } count:3 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(DaggerComponent)

@implementation DaggerComponent_Builder

- (IOSClass *)annotationType {
  return DaggerComponent_Builder_class_();
}

- (NSString *)description {
  return @"@dagger.Component$Builder()";
}

+ (const J2ObjcClassInfo *)__metadata {
  static const void *ptrTable[] = { "LDaggerComponent;", (void *)&DaggerComponent_Builder__Annotations$0 };
  static const J2ObjcClassInfo _DaggerComponent_Builder = { "Builder", "dagger", ptrTable, NULL, NULL, 7, 0x2609, 0, 0, 0, -1, -1, -1, 1 };
  return &_DaggerComponent_Builder;
}

@end

id<DaggerComponent_Builder> create_DaggerComponent_Builder() {
  DaggerComponent_Builder *self = AUTORELEASE([[DaggerComponent_Builder alloc] init]);
  return self;
}

IOSObjectArray *DaggerComponent_Builder__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangAnnotationTarget([IOSObjectArray arrayWithObjects:(id[]){ JreLoadEnum(JavaLangAnnotationElementType, TYPE) } count:1 type:NSObject_class_()]), create_JavaLangAnnotationDocumented() } count:2 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(DaggerComponent_Builder)
